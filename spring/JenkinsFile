pipeline {
    agent any
    
    tools {
        maven 'Maven-3.8.1' // Make sure this matches your Jenkins Maven configuration
        jdk 'JDK-11' // Or JDK-17 based on your setup
    }
    
    environment {
        APP_NAME = 'mygreetings-app'
        PORT = '8080'
    }
    
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Sreyas-17/jenkins-deploy'
                // Replace with your actual Git repository URL
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    publishTestResults testResultsPattern: 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
            post {
                success {
                    archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    // Stop existing application if running
                    sh '''
                        PID=$(ps aux | grep 'mygreetings' | grep -v grep | awk '{print $2}' | head -1)
                        if [ ! -z "$PID" ]; then
                            echo "Stopping existing application with PID: $PID"
                            kill -9 $PID
                            sleep 5
                        fi
                    '''
                    
                    // Start new application
                    sh '''
                        nohup java -jar target/*.jar > app.log 2>&1 &
                        sleep 10
                        echo "Application started"
                    '''
                }
            }
        }
        
        stage('Health Check') {
            steps {
                script {
                    // Wait for application to start
                    sleep(time: 30, unit: 'SECONDS')
                    
                    // Health check
                    sh '''
                        for i in {1..10}; do
                            if curl -f http://localhost:8080/greeting; then
                                echo "Application is healthy"
                                exit 0
                            fi
                            echo "Attempt $i failed, retrying..."
                            sleep 10
                        done
                        echo "Health check failed"
                        exit 1
                    '''
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
        success {
            echo 'Deployment successful!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
